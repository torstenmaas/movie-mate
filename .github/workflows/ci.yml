name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Node zuerst
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          check-latest: true

      # pnpm installieren (vor dem Caching!)
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.15.0
          run_install: false

      # pnpm-Store cachen
      - name: Get pnpm store directory
        id: pnpm-cache
        run: echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      # Install / Lint / Typecheck / Test
      - name: Install
        run: pnpm install --frozen-lockfile=false

      - name: Lint
        run: pnpm lint

      - name: Typecheck
        run: pnpm typecheck

      - name: Test
        run: pnpm test

  e2e-db:
    name: E2E (DB, Testcontainers)
    runs-on: ubuntu-latest
    needs: build-test
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          check-latest: true

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.15.0
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        run: echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install
        run: pnpm install --frozen-lockfile=false

      - name: Run DB E2E (Testcontainers)
        env:
          RUN_DB_TESTS: 'true'
        run: pnpm test:db

  release-check:
    name: Release Check (Docker build + smoke)
    runs-on: ubuntu-latest
    needs: build-test
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build Docker image
        run: |
          docker build -t movie-mate:test -f Dockerfile .

      - name: Run container and liveness smoke test
        run: |
          docker run -d --rm -p 3000:3000 --name mm-test movie-mate:test
          for i in {1..30}; do \
            curl -fsS http://127.0.0.1:3000/health && exit 0 || sleep 1; \
          done; \
          echo "Service did not become healthy"; \
          docker logs mm-test || true; \
          exit 1

      - name: Stop container
        if: always()
        run: docker stop mm-test || true
