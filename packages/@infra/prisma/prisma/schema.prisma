// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  output        = "../client"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String    @id @default(uuid())
  email            String    @unique
  displayName      String
  hashedPassword   String
  emailVerified    Boolean   @default(false)
  preferredLocale  String    @default("de")
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt

  sessions         Session[]
  emailVerifications EmailVerification[]
  passwordResets   PasswordReset[]

  @@map("users")
}

model Session {
  id         String   @id @default(uuid())
  userId     String
  expiresAt  DateTime
  data       Json     @default("{}")
  createdAt  DateTime @default(now())
  
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@map("sessions")
}

model EmailVerification {
  id         String   @id @default(uuid())
  userId     String
  token      String   @unique
  expiresAt  DateTime
  createdAt  DateTime @default(now())
  
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([token])
  @@map("email_verifications")
}

model PasswordReset {
  id         String    @id @default(uuid())
  userId     String
  token      String    @unique
  expiresAt  DateTime
  usedAt     DateTime?
  createdAt  DateTime  @default(now())
  
  user       User      @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([token])
  @@map("password_resets")
}
